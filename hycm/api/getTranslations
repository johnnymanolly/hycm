var log = require("log");
log.setLevel("INFO");
var documents = require("document");

var params = {};
if(request.body != null){
	params = request.body;
}else if(request.parameters.body){
	params = request.parameters.body;
} else {
  params = request.parameters;
}
if(typeof params == 'string' && params != null){
  	try{
    	params = JSON.parse(params);   
    }catch(e){
      	return "INVALID OR MISSING PARAMETER";
    }
}

var columnName = params.columnName;
var resultsPerPage = params.resultsPerPage;
var pageNumber = params.pageNumber;
var sort = params.sort;
var sortType = params.sortType;
var queryFilter = params.queryFilter;
var queryType = params.queryType;
var sortingColumnName = params.sortingColumnName;
var filterColumnName = params.filterColumnName;
var action = params.action;

var results;

if(params.action){
    delete params.action
}

if(params.file){
    delete params.file;
}

if(action){
  var fieldsToSave = params;  
  fieldsToSave["formType"] = "translations"; 
  if(action == "add"){
      log.info(JSON.stringify(fieldsToSave))
    var fieldsToSaveResult = documents.save(fieldsToSave);
    if(fieldsToSaveResult.metadata.status == "failure") {
      return fieldsToSaveResult.metadata;
    }else{
      return  {status : "success"}
    }
  }else if(action == "edit"){
    var fieldsToSaveResult = documents.save(fieldsToSave);
    if(fieldsToSaveResult.metadata.status == "failure") {
      return fieldsToSaveResult.metadata;
    }else{
      return  {status : "success"}
    }
  }else if(action == "delete"){
    if(params.keys){
      var keys = params.keys;
      for(var i = 0; i < keys.length; i++){
        documents.delete(keys[i]);
      }
    } 
    return  {status : "success"}
  }
}else{
  var queryParams = {};
  if(sortType == null) sortType = "string"
  var fieldsParams = "*";
  var queryString = 'formType = "translations"';
  var sortString = (sortingColumnName && sortingColumnName != "" && sortingColumnName != "undefined") ? sortingColumnName+"<"+sortType+":"+sort+">" : null;

  queryParams["count"] = "true";
  queryParams["query"] =  queryString;
  queryParams["fields"] =  fieldsParams;

  if(queryFilter){
    var filterQuery = (filterColumnName == null)? " and (page like \"" +queryFilter+ "%\" or en like \"" +queryFilter+ "%\" or it like \"" +queryFilter+ "%\" or ar like \"" +queryFilter+ "%\")" : "and ("+filterColumnName+"<"+sortType+">" + " like \"" +queryFilter+ "%\")";
    queryParams["query"] += filterQuery;
  }

  if(sortString){
    queryParams["sort"] = sortString;
  }
  if(resultsPerPage){
    queryParams["resultsPerPage"] = resultsPerPage;
  }
  if(pageNumber){
    queryParams["pageNumber"] = pageNumber;
  }
  log.info(JSON.stringify(queryParams))
  results = documents.query(queryParams);

  return results.result
}

